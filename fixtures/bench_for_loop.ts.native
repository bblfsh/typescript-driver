{
   amdDependencies: [],
   bindDiagnostics: [],
   col: 1,
   comments: [],
   end: 155,
   flags: [],
   identifierCount: 12,
   identifiers: {},
   isDeclarationFile: false,
   kind: "SourceFile",
   languageVariant: 0,
   line: 1,
   nodeCount: 48,
   pos: 0,
   referencedFiles: [],
   scriptKind: 3,
   statements: [
      {
         col: 1,
         condition: {
            col: 24,
            end: 29,
            flags: [],
            kind: "BinaryExpression",
            left: {
               col: 24,
               end: 25,
               escapedText: "i",
               flags: [],
               kind: "Identifier",
               line: 1,
               pos: 23,
            },
            line: 1,
            operatorToken: {
               col: 26,
               end: 27,
               flags: [],
               kind: "LessThanToken",
               line: 1,
               pos: 25,
            },
            pos: 23,
            right: {
               col: 28,
               end: 29,
               flags: [],
               kind: "NumericLiteral",
               line: 1,
               numericLiteralFlags: 0,
               pos: 27,
               text: "5",
            },
         },
         end: 155,
         flags: [],
         incrementor: {
            col: 31,
            end: 34,
            flags: [],
            kind: "PrefixUnaryExpression",
            line: 1,
            operand: {
               col: 34,
               end: 34,
               escapedText: "i",
               flags: [],
               kind: "Identifier",
               line: 1,
               pos: 33,
            },
            operator: 43,
            pos: 30,
         },
         initializer: {
            col: 6,
            declarations: [
               {
                  col: 9,
                  end: 22,
                  flags: [DisallowInContext, ContextFlags],
                  initializer: {
                     col: 21,
                     end: 22,
                     flags: [DisallowInContext, ContextFlags],
                     kind: "NumericLiteral",
                     line: 1,
                     numericLiteralFlags: 0,
                     pos: 20,
                     text: "0",
                  },
                  kind: "VariableDeclaration",
                  line: 1,
                  name: {
                     col: 9,
                     end: 10,
                     escapedText: "i",
                     flags: [DisallowInContext, ContextFlags],
                     kind: "Identifier",
                     line: 1,
                     pos: 8,
                  },
                  pos: 8,
                  type: {
                     col: 12,
                     end: 18,
                     flags: [DisallowInContext, ContextFlags],
                     kind: "NumberKeyword",
                     line: 1,
                     pos: 11,
                  },
               },
            ],
            end: 22,
            flags: [Let, BlockScoped],
            kind: "VariableDeclarationList",
            line: 1,
            pos: 5,
         },
         kind: "ForStatement",
         line: 1,
         modifierFlagsCache: 536870912,
         pos: 0,
         statement: {
            col: 36,
            end: 155,
            flags: [],
            kind: "Block",
            line: 1,
            multiLine: true,
            pos: 35,
            statements: [
               {
                  col: 38,
                  declarationList: {
                     col: 38,
                     declarations: [
                        {
                           col: 8,
                           end: 63,
                           flags: [],
                           initializer: {
                              col: 23,
                              end: 63,
                              flags: [],
                              kind: "StringLiteral",
                              line: 2,
                              pos: 60,
                              text: "",
                           },
                           kind: "VariableDeclaration",
                           line: 2,
                           name: {
                              col: 8,
                              end: 50,
                              escapedText: "line",
                              flags: [],
                              kind: "Identifier",
                              line: 2,
                              pos: 45,
                           },
                           pos: 45,
                           type: {
                              col: 14,
                              end: 58,
                              flags: [],
                              kind: "StringKeyword",
                              line: 2,
                              pos: 51,
                           },
                        },
                     ],
                     end: 63,
                     flags: [Let, BlockScoped],
                     kind: "VariableDeclarationList",
                     line: 1,
                     pos: 37,
                  },
                  end: 63,
                  flags: [],
                  kind: "VariableStatement",
                  line: 1,
                  pos: 37,
               },
               {
                  col: 26,
                  condition: {
                     col: 27,
                     end: 97,
                     flags: [],
                     kind: "BinaryExpression",
                     left: {
                        col: 27,
                        end: 92,
                        escapedText: "j",
                        flags: [],
                        kind: "Identifier",
                        line: 3,
                        pos: 90,
                     },
                     line: 3,
                     operatorToken: {
                        col: 29,
                        end: 95,
                        flags: [],
                        kind: "LessThanEqualsToken",
                        line: 3,
                        pos: 92,
                     },
                     pos: 90,
                     right: {
                        col: 32,
                        end: 97,
                        escapedText: "i",
                        flags: [],
                        kind: "Identifier",
                        line: 3,
                        pos: 95,
                     },
                  },
                  end: 131,
                  flags: [],
                  incrementor: {
                     col: 35,
                     end: 102,
                     flags: [],
                     kind: "PrefixUnaryExpression",
                     line: 3,
                     operand: {
                        col: 38,
                        end: 102,
                        escapedText: "j",
                        flags: [],
                        kind: "Identifier",
                        line: 3,
                        pos: 101,
                     },
                     operator: 43,
                     pos: 98,
                  },
                  initializer: {
                     col: 9,
                     declarations: [
                        {
                           col: 12,
                           end: 89,
                           flags: [DisallowInContext, ContextFlags],
                           initializer: {
                              col: 24,
                              end: 89,
                              flags: [DisallowInContext, ContextFlags],
                              kind: "NumericLiteral",
                              line: 3,
                              numericLiteralFlags: 0,
                              pos: 87,
                              text: "0",
                           },
                           kind: "VariableDeclaration",
                           line: 3,
                           name: {
                              col: 12,
                              end: 77,
                              escapedText: "j",
                              flags: [DisallowInContext, ContextFlags],
                              kind: "Identifier",
                              line: 3,
                              pos: 75,
                           },
                           pos: 75,
                           type: {
                              col: 15,
                              end: 85,
                              flags: [DisallowInContext, ContextFlags],
                              kind: "NumberKeyword",
                              line: 3,
                              pos: 78,
                           },
                        },
                     ],
                     end: 89,
                     flags: [Let, BlockScoped],
                     kind: "VariableDeclarationList",
                     line: 3,
                     pos: 72,
                  },
                  kind: "ForStatement",
                  line: 2,
                  pos: 63,
                  statement: {
                     col: 40,
                     end: 131,
                     flags: [],
                     kind: "Block",
                     line: 3,
                     multiLine: true,
                     pos: 103,
                     statements: [
                        {
                           col: 42,
                           end: 125,
                           expression: {
                              col: 42,
                              end: 125,
                              flags: [],
                              kind: "BinaryExpression",
                              left: {
                                 col: 42,
                                 end: 118,
                                 escapedText: "line",
                                 flags: [],
                                 kind: "Identifier",
                                 line: 3,
                                 pos: 105,
                              },
                              line: 3,
                              operatorToken: {
                                 col: 13,
                                 end: 121,
                                 flags: [],
                                 kind: "PlusEqualsToken",
                                 line: 4,
                                 pos: 118,
                              },
                              pos: 105,
                              right: {
                                 col: 16,
                                 end: 125,
                                 flags: [],
                                 kind: "StringLiteral",
                                 line: 4,
                                 pos: 121,
                                 text: "*",
                              },
                           },
                           flags: [],
                           kind: "ExpressionStatement",
                           line: 3,
                           pos: 105,
                        },
                     ],
                  },
               },
               {
                  col: 6,
                  end: 153,
                  expression: {
                     arguments: [
                        {
                           col: 17,
                           end: 152,
                           escapedText: "line",
                           flags: [],
                           kind: "Identifier",
                           line: 6,
                           pos: 148,
                        },
                     ],
                     col: 6,
                     end: 153,
                     expression: {
                        col: 6,
                        end: 147,
                        expression: {
                           col: 6,
                           end: 143,
                           escapedText: "console",
                           flags: [],
                           kind: "Identifier",
                           line: 5,
                           pos: 131,
                        },
                        flags: [],
                        kind: "PropertyAccessExpression",
                        line: 5,
                        name: {
                           col: 13,
                           end: 147,
                           escapedText: "log",
                           flags: [],
                           kind: "Identifier",
                           line: 6,
                           pos: 144,
                        },
                        pos: 131,
                     },
                     flags: [],
                     kind: "CallExpression",
                     line: 5,
                     pos: 131,
                  },
                  flags: [],
                  kind: "ExpressionStatement",
                  line: 5,
                  pos: 131,
               },
            ],
         },
      },
   ],
   typeReferenceDirectives: [],
}